AWSTemplateFormatVersion: '2010-09-09'
Description: HTTPS通信を可能とした、前段にCloudFrontを配置したWebサイトホスティング用S3バケットの構成を構築する（REST APIエンドポイント）

Parameters:
  Fqdn:
    Type: String
    Default: "hoge.example.com"
  HostedZoneId:
    Type: String
    Default: "ZXXXXXXXXXXXXXXXXXXXXX"
  CertificateArn:
    Type: String
    Default: "arn:aws:acm:us-east-1:12345678901:certificate/xxxxxxxxxxxxxxxxxxxx"
  403ErrorPagePath:
    Type: String
    Default: "/error.html"
  404ErrorPagePath:
    Type: String
    Default: "/error.html"

Resources:
  WebSiteHostingBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: RetainExceptOnCreate
    Properties:
      BucketName: !Sub "${AWS::StackName}-bucket"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      WebsiteConfiguration:
        IndexDocument: index.html

  WebSiteHostingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebSiteHostingBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: 'PublicReadGetObject'
            Effect: 'Allow'
            Principal:
              Service: "cloudfront.amazonaws.com"
            Action: 's3:GetObject'
            Resource: !Sub 'arn:aws:s3:::${WebSiteHostingBucket}/*'
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}"

  CloudFrontOac:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub "${AWS::StackName}-oac"
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Logging:
          IncludeCookies: false
          Bucket: !GetAtt CloudFrontLogBucket.DomainName
          Prefix: ""
        Comment: ""
        DefaultRootObject: "index.html"
        Origins:
          - ConnectionTimeout: 10
            ConnectionAttempts: 3
            DomainName: !GetAtt WebSiteHostingBucket.RegionalDomainName
            OriginShield:
              Enabled: false
            OriginPath: ""
            Id: !Sub "${WebSiteHostingBucket}.s3-website-ap-northeast-1.amazonaws.com"
            S3OriginConfig:
              OriginAccessIdentity: ""
            OriginAccessControlId: !Ref CloudFrontOac
        ViewerCertificate:
          MinimumProtocolVersion: "TLSv1.2_2021"
          SslSupportMethod: "sni-only"
          AcmCertificateArn: !Ref CertificateArn
        PriceClass: "PriceClass_All"
        DefaultCacheBehavior:
          Compress: true
          AllowedMethods:
            - "HEAD"
            - "GET"
          CachedMethods:
            - "HEAD"
            - "GET"
          SmoothStreaming: false
          TargetOriginId: !Sub "${WebSiteHostingBucket}.s3-website-ap-northeast-1.amazonaws.com"
          ViewerProtocolPolicy: "redirect-to-https"
          CachePolicyId: "658327ea-f89d-4fab-a63d-7e88639e58f6" # Managed-CachingOptimized ポリシーのID
        Staging: false
        OriginGroups:
          Quantity: 0
        Enabled: true
        Aliases:
          - !Ref Fqdn
        IPV6Enabled: true
        WebACLId: ""
        HttpVersion: "http2and3"
        Restrictions:
          GeoRestriction:
            RestrictionType: "none"
        CustomErrorResponses:
          - ErrorCode: 403
            ResponsePagePath: !Ref 403ErrorPagePath
            ResponseCode: 200
            ErrorCachingMinTTL: 300
          - ErrorCode: 404
            ResponsePagePath: !Ref 404ErrorPagePath
            ResponseCode: 200
            ErrorCachingMinTTL: 300

  CloudFrontDistributionDnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref Fqdn
      Type: A
      AliasTarget:
        # Z2FDTNDATAQYW2はCloudFront固有の固定HostedZoneId
        # @see https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/quickref-route53.html#w9ab1c23c21c84c11
        HostedZoneId: Z2FDTNDATAQYW2
        DNSName: !GetAtt CloudFrontDistribution.DomainName

  CloudFrontLogBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: RetainExceptOnCreate
    Properties:
      BucketName: !Sub "${AWS::StackName}-cloudfront-log"
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        BlockPublicAcls: true
      OwnershipControls:
        Rules:
          - ObjectOwnership: "BucketOwnerPreferred"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"
