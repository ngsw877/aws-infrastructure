AWSTemplateFormatVersion: '2010-09-09'
Description: HTTPS通信を可能とした、前段にCloudFrontを配置したWebサイトホスティング用S3バケットの構成を構築する

Parameters:
  DomainName:
    Type: String
    Default: "example.com"
  HostedZoneId:
    Type: String
  CertificateArn:
    Type: String

Resources:
  WebSiteHostingBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: RetainExceptOnCreate
    Properties:
      BucketName: !Ref DomainName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      WebsiteConfiguration:
        IndexDocument: index.html

  WebSiteHostingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebSiteHostingBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: 'PublicReadGetObject'
            Effect: 'Allow'
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub 'arn:aws:s3:::${WebSiteHostingBucket}/*'

  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Logging:
          IncludeCookies: false
          Bucket:
            Fn::GetAtt:
              - "CloudFrontLogBucket"
              - "DomainName"
          Prefix: ""
        Comment: ""
        DefaultRootObject: "index.html"
        Origins:
          - ConnectionTimeout: 10
            OriginAccessControlId: ""
            ConnectionAttempts: 3
            OriginCustomHeaders: [ ]
            DomainName: !Sub "${DomainName}.s3-website-ap-northeast-1.amazonaws.com"
            OriginShield:
              Enabled: false
            OriginPath: ""
            Id: !Sub "${DomainName}.s3-website-ap-northeast-1.amazonaws.com"
            CustomOriginConfig:
              OriginKeepaliveTimeout: 5
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - "SSLv3"
                - "TLSv1"
                - "TLSv1.1"
                - "TLSv1.2"
              HTTPSPort: 443
              HTTPPort: 80
              OriginProtocolPolicy: "http-only"
        ViewerCertificate:
          MinimumProtocolVersion: "TLSv1.2_2021"
          SslSupportMethod: "sni-only"
          AcmCertificateArn: !Ref CertificateArn
        PriceClass: "PriceClass_All"
        DefaultCacheBehavior:
          Compress: true
          TrustedKeyGroups: [ ]
          FunctionAssociations: [ ]
          AllowedMethods:
            - "HEAD"
            - "GET"
          CachedMethods:
            - "HEAD"
            - "GET"
          LambdaFunctionAssociations: [ ]
          SmoothStreaming: false
          TargetOriginId: !Sub "${DomainName}.s3-website-ap-northeast-1.amazonaws.com"
          ViewerProtocolPolicy: "redirect-to-https"
          CachePolicyId: "658327ea-f89d-4fab-a63d-7e88639e58f6" # Managed-CachingOptimized ポリシーのID
          TrustedSigners: [ ]
          FieldLevelEncryptionId: ""
        Staging: false
        CustomErrorResponses: [ ]
        ContinuousDeploymentPolicyId: ""
        OriginGroups:
          Quantity: 0
          Items: [ ]
        Enabled: true
        Aliases:
          - !Ref DomainName
        IPV6Enabled: true
        WebACLId: ""
        HttpVersion: "http2and3"
        Restrictions:
          GeoRestriction:
            Locations: [ ]
            RestrictionType: "none"
        CacheBehaviors: [ ]

  CloudFrontDistributionDnsRecord:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
        - Name: !Ref DomainName
          Type: A
          AliasTarget:
            # Z2FDTNDATAQYW2はCloudFront固有の固定HostedZoneId
            # @see https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/quickref-route53.html#w9ab1c23c21c84c11
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt CloudFrontDistribution.DomainName

  CloudFrontLogBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: RetainExceptOnCreate
    Properties:
      BucketName: !Sub "${AWS::StackName}-cloudfront-log"
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        BlockPublicAcls: true
      OwnershipControls:
        Rules:
          - ObjectOwnership: "BucketOwnerPreferred"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"
