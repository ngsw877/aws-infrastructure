services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: demo-sns-postgres
    environment:
      POSTGRES_DB: demo_sns
      POSTGRES_USER: demo_sns_user
      POSTGRES_PASSWORD: demo_sns_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - demo-sns-network

  # Laravel Backend (PHP-FPM)
  backend:
    build:
      context: ./backend
      dockerfile: docker/php/Dockerfile
    container_name: demo-sns-backend
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
      - ./backend/storage:/var/www/storage
    depends_on:
      - postgres
      - minio
    networks:
      - demo-sns-network
    environment:
      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: demo_sns
      DB_USERNAME: demo_sns_user
      DB_PASSWORD: demo_sns_password
      # MinIO (ローカルS3互換ストレージ)
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      AWS_DEFAULT_REGION: ap-northeast-1
      AWS_BUCKET: demo-sns
      AWS_ENDPOINT: http://minio:9000
      AWS_USE_PATH_STYLE_ENDPOINT: true

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: demo-sns-nginx
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www
      - ./backend/docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - demo-sns-network

  # Nuxt Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: docker/Dockerfile
    container_name: demo-sns-frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - nginx
    networks:
      - demo-sns-network
    environment:
      NUXT_PUBLIC_API_BASE: http://nginx/api

  # MinIO (S3互換オブジェクトストレージ)
  minio:
    image: minio/minio:latest
    container_name: demo-sns-minio
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - demo-sns-network
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  demo-sns-network:
    driver: bridge

volumes:
  postgres_data:
  minio_data:
