"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.params = void 0;
const aws_cdk_lib_1 = require("aws-cdk-lib");
const secrets_1 = require("./secrets");
// スナップショットテスト用
const dummyAccountId = "123456789012";
// 共通のIP制限除外パス
const commonIpRestrictionExcludedPaths = [
    "/sample",
    "/product",
    "/login",
    "/register",
    "/_nuxt/", // Nuxt.jsのアセット
];
// マルチドメイン対応のテナント設定
const tenants = [
    // テナント1
    {
        route53HostedZoneId: "Z0201048170ZNG2QS3LN1",
        appDomainName: "dev.s3-ecs-web-service.sample-app.click",
        allowedIpAddresses: secrets_1.devSecrets.allowedIpAddresses,
        ipRestrictionExcludedPaths: commonIpRestrictionExcludedPaths,
        isSesEnabled: true,
        isDemo: false,
    },
    // テナント2
    {
        route53HostedZoneId: "Z01140211URKT1J60WTA5",
        appDomainName: "dev.s3-ecs-web-service.hoge-app.click",
        // IP制限なし
        isSesEnabled: false,
        isDemo: false,
    },
    // テナント3（デモテナント）
    {
        route53HostedZoneId: "Z01140211URKT1J60WTA5",
        appDomainName: "demo1.dev.s3-ecs-web-service.hoge-app.click",
        // IP制限なし
        isSesEnabled: false,
        isDemo: true,
    },
    // テナント4（デモテナント）
    {
        route53HostedZoneId: "Z01140211URKT1J60WTA5",
        appDomainName: "demo2.dev.s3-ecs-web-service.hoge-app.click",
        // IP制限なし
        isSesEnabled: false,
        isDemo: true,
    },
];
const commonStackProps = {
    crossRegionReferences: true,
    envName: "dev",
    tenants: tenants,
    logRetentionDays: aws_cdk_lib_1.aws_logs.RetentionDays.THREE_MONTHS,
};
const globalStackProps = {
    ...commonStackProps,
    env: {
        account: process.env.CDK_DEFAULT_ACCOUNT || dummyAccountId,
        region: "us-east-1",
    },
};
const mainStackProps = {
    ...commonStackProps,
    env: {
        account: process.env.CDK_DEFAULT_ACCOUNT || dummyAccountId,
        region: "ap-northeast-1",
    },
    natGatewaysCount: 1,
    defaultTtl: aws_cdk_lib_1.Duration.days(1),
    maxTtl: aws_cdk_lib_1.Duration.days(365),
    minTtl: aws_cdk_lib_1.Duration.seconds(0),
    healthCheckPath: "/",
    backendEcsTaskCpu: 1024,
    backendEcsTaskMemory: 2048,
    backendMaxTaskCount: 1,
    backendMinTaskCount: 1,
    backendDesiredCount: 1,
    backendEcsScaleOutPeriod: aws_cdk_lib_1.Duration.seconds(300),
    backendEcsScaleOutEvaluationPeriods: 3,
    backendEcsScaleInPeriod: aws_cdk_lib_1.Duration.seconds(300),
    backendEcsScaleInEvaluationPeriods: 3,
    appDebug: true,
    postgresVersion: aws_cdk_lib_1.aws_rds.AuroraPostgresEngineVersion.VER_16_3,
    postgresClientVersion: 16,
    isReadReplicaEnabled: false,
    auroraServerlessV2MinCapacity: 0.5,
    auroraServerlessV2MaxCapacity: 4,
    ecsSchedulerState: "ENABLED",
    auroraSchedulerState: "ENABLED",
    dmarcReportEmail: secrets_1.devSecrets.dmarcReportEmail,
    slackWorkspaceId: secrets_1.devSecrets.slack.workspaceId,
    warningSlackChannelId: secrets_1.devSecrets.slack.warningChannelId,
    githubOrgName: "ngsw877",
    githubRepositoryName: "aws-infrastructure",
    albDeletionProtection: false,
    auroraDeletionProtection: false,
};
exports.params = {
    globalStackProps: globalStackProps,
    mainStackProps: mainStackProps,
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZGV2LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDZDQUF1RTtBQUV2RSx1Q0FBcUM7QUFDckMsZUFBZTtBQUNmLE1BQU0sY0FBYyxHQUFHLGNBQWMsQ0FBQztBQUV0QyxjQUFjO0FBQ2QsTUFBTSxnQ0FBZ0MsR0FBRztJQUNyQyxTQUFTO0lBQ1QsVUFBVTtJQUNWLFFBQVE7SUFDUixXQUFXO0lBQ1gsU0FBUyxFQUFFLGVBQWU7Q0FDN0IsQ0FBQztBQUVGLG1CQUFtQjtBQUNuQixNQUFNLE9BQU8sR0FBYTtJQUN0QixRQUFRO0lBQ1I7UUFDSSxtQkFBbUIsRUFBRSx1QkFBdUI7UUFDNUMsYUFBYSxFQUFFLHlDQUF5QztRQUN4RCxrQkFBa0IsRUFBRSxvQkFBVSxDQUFDLGtCQUFrQjtRQUNqRCwwQkFBMEIsRUFBRSxnQ0FBZ0M7UUFDNUQsWUFBWSxFQUFFLElBQUk7UUFDbEIsTUFBTSxFQUFFLEtBQUs7S0FDaEI7SUFDRCxRQUFRO0lBQ1I7UUFDSSxtQkFBbUIsRUFBRSx1QkFBdUI7UUFDNUMsYUFBYSxFQUFFLHVDQUF1QztRQUN0RCxTQUFTO1FBQ1QsWUFBWSxFQUFFLEtBQUs7UUFDbkIsTUFBTSxFQUFFLEtBQUs7S0FDaEI7SUFDRCxnQkFBZ0I7SUFDaEI7UUFDSSxtQkFBbUIsRUFBRSx1QkFBdUI7UUFDNUMsYUFBYSxFQUFFLDZDQUE2QztRQUM1RCxTQUFTO1FBQ1QsWUFBWSxFQUFFLEtBQUs7UUFDbkIsTUFBTSxFQUFFLElBQUk7S0FDZjtJQUNELGdCQUFnQjtJQUNoQjtRQUNJLG1CQUFtQixFQUFFLHVCQUF1QjtRQUM1QyxhQUFhLEVBQUUsNkNBQTZDO1FBQzVELFNBQVM7UUFDVCxZQUFZLEVBQUUsS0FBSztRQUNuQixNQUFNLEVBQUUsSUFBSTtLQUNmO0NBQ0osQ0FBQztBQUVGLE1BQU0sZ0JBQWdCLEdBQXFCO0lBQ3ZDLHFCQUFxQixFQUFFLElBQUk7SUFDM0IsT0FBTyxFQUFFLEtBQUs7SUFDZCxPQUFPLEVBQUUsT0FBTztJQUNoQixnQkFBZ0IsRUFBRSxzQkFBSSxDQUFDLGFBQWEsQ0FBQyxZQUFZO0NBQ3BELENBQUM7QUFFRixNQUFNLGdCQUFnQixHQUFxQjtJQUN2QyxHQUFHLGdCQUFnQjtJQUNuQixHQUFHLEVBQUU7UUFDRCxPQUFPLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsSUFBSSxjQUFjO1FBQzFELE1BQU0sRUFBRSxXQUFXO0tBQ3RCO0NBQ0osQ0FBQztBQUVGLE1BQU0sY0FBYyxHQUFtQjtJQUNuQyxHQUFHLGdCQUFnQjtJQUNuQixHQUFHLEVBQUU7UUFDRCxPQUFPLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsSUFBSSxjQUFjO1FBQzFELE1BQU0sRUFBRSxnQkFBZ0I7S0FDM0I7SUFDRCxnQkFBZ0IsRUFBRSxDQUFDO0lBQ25CLFVBQVUsRUFBRSxzQkFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDNUIsTUFBTSxFQUFFLHNCQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQztJQUMxQixNQUFNLEVBQUUsc0JBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBQzNCLGVBQWUsRUFBRSxHQUFHO0lBQ3BCLGlCQUFpQixFQUFFLElBQUk7SUFDdkIsb0JBQW9CLEVBQUUsSUFBSTtJQUMxQixtQkFBbUIsRUFBRSxDQUFDO0lBQ3RCLG1CQUFtQixFQUFFLENBQUM7SUFDdEIsbUJBQW1CLEVBQUUsQ0FBQztJQUN0Qix3QkFBd0IsRUFBRSxzQkFBUSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUM7SUFDL0MsbUNBQW1DLEVBQUUsQ0FBQztJQUN0Qyx1QkFBdUIsRUFBRSxzQkFBUSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUM7SUFDOUMsa0NBQWtDLEVBQUUsQ0FBQztJQUNyQyxRQUFRLEVBQUUsSUFBSTtJQUNkLGVBQWUsRUFBRSxxQkFBRyxDQUFDLDJCQUEyQixDQUFDLFFBQVE7SUFDekQscUJBQXFCLEVBQUUsRUFBRTtJQUN6QixvQkFBb0IsRUFBRSxLQUFLO0lBQzNCLDZCQUE2QixFQUFFLEdBQUc7SUFDbEMsNkJBQTZCLEVBQUUsQ0FBQztJQUNoQyxpQkFBaUIsRUFBRSxTQUFTO0lBQzVCLG9CQUFvQixFQUFFLFNBQVM7SUFDL0IsZ0JBQWdCLEVBQUUsb0JBQVUsQ0FBQyxnQkFBZ0I7SUFDN0MsZ0JBQWdCLEVBQUUsb0JBQVUsQ0FBQyxLQUFLLENBQUMsV0FBVztJQUM5QyxxQkFBcUIsRUFBRSxvQkFBVSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0I7SUFDeEQsYUFBYSxFQUFFLFNBQVM7SUFDeEIsb0JBQW9CLEVBQUUsb0JBQW9CO0lBQzFDLHFCQUFxQixFQUFFLEtBQUs7SUFDNUIsd0JBQXdCLEVBQUUsS0FBSztDQUNsQyxDQUFDO0FBRVcsUUFBQSxNQUFNLEdBQVc7SUFDMUIsZ0JBQWdCLEVBQUUsZ0JBQWdCO0lBQ2xDLGNBQWMsRUFBRSxjQUFjO0NBQ2pDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2F3c19sb2dzIGFzIGxvZ3MsIGF3c19yZHMgYXMgcmRzLCBEdXJhdGlvbn0gZnJvbSBcImF3cy1jZGstbGliXCI7XG5pbXBvcnQgdHlwZSB7Q29tbW9uU3RhY2tQcm9wcywgR2xvYmFsU3RhY2tQcm9wcywgTWFpblN0YWNrUHJvcHMsIFBhcmFtcywgVGVuYW50LH0gZnJvbSBcIi4uL3R5cGVzL3BhcmFtc1wiO1xuaW1wb3J0IHtkZXZTZWNyZXRzfSBmcm9tIFwiLi9zZWNyZXRzXCI7XG4vLyDjgrnjg4rjg4Pjg5fjgrfjg6fjg4Pjg4jjg4bjgrnjg4jnlKhcbmNvbnN0IGR1bW15QWNjb3VudElkID0gXCIxMjM0NTY3ODkwMTJcIjtcblxuLy8g5YWx6YCa44GuSVDliLbpmZDpmaTlpJbjg5HjgrlcbmNvbnN0IGNvbW1vbklwUmVzdHJpY3Rpb25FeGNsdWRlZFBhdGhzID0gW1xuICAgIFwiL3NhbXBsZVwiLFxuICAgIFwiL3Byb2R1Y3RcIixcbiAgICBcIi9sb2dpblwiLFxuICAgIFwiL3JlZ2lzdGVyXCIsXG4gICAgXCIvX251eHQvXCIsIC8vIE51eHQuanPjga7jgqLjgrvjg4Pjg4hcbl07XG5cbi8vIOODnuODq+ODgeODieODoeOCpOODs+WvvuW/nOOBruODhuODiuODs+ODiOioreWumlxuY29uc3QgdGVuYW50czogVGVuYW50W10gPSBbXG4gICAgLy8g44OG44OK44Oz44OIMVxuICAgIHtcbiAgICAgICAgcm91dGU1M0hvc3RlZFpvbmVJZDogXCJaMDIwMTA0ODE3MFpORzJRUzNMTjFcIixcbiAgICAgICAgYXBwRG9tYWluTmFtZTogXCJkZXYuczMtZWNzLXdlYi1zZXJ2aWNlLnNhbXBsZS1hcHAuY2xpY2tcIixcbiAgICAgICAgYWxsb3dlZElwQWRkcmVzc2VzOiBkZXZTZWNyZXRzLmFsbG93ZWRJcEFkZHJlc3NlcyxcbiAgICAgICAgaXBSZXN0cmljdGlvbkV4Y2x1ZGVkUGF0aHM6IGNvbW1vbklwUmVzdHJpY3Rpb25FeGNsdWRlZFBhdGhzLFxuICAgICAgICBpc1Nlc0VuYWJsZWQ6IHRydWUsXG4gICAgICAgIGlzRGVtbzogZmFsc2UsXG4gICAgfSxcbiAgICAvLyDjg4bjg4rjg7Pjg4gyXG4gICAge1xuICAgICAgICByb3V0ZTUzSG9zdGVkWm9uZUlkOiBcIlowMTE0MDIxMVVSS1QxSjYwV1RBNVwiLFxuICAgICAgICBhcHBEb21haW5OYW1lOiBcImRldi5zMy1lY3Mtd2ViLXNlcnZpY2UuaG9nZS1hcHAuY2xpY2tcIixcbiAgICAgICAgLy8gSVDliLbpmZDjgarjgZdcbiAgICAgICAgaXNTZXNFbmFibGVkOiBmYWxzZSxcbiAgICAgICAgaXNEZW1vOiBmYWxzZSxcbiAgICB9LFxuICAgIC8vIOODhuODiuODs+ODiDPvvIjjg4fjg6Ljg4bjg4rjg7Pjg4jvvIlcbiAgICB7XG4gICAgICAgIHJvdXRlNTNIb3N0ZWRab25lSWQ6IFwiWjAxMTQwMjExVVJLVDFKNjBXVEE1XCIsXG4gICAgICAgIGFwcERvbWFpbk5hbWU6IFwiZGVtbzEuZGV2LnMzLWVjcy13ZWItc2VydmljZS5ob2dlLWFwcC5jbGlja1wiLFxuICAgICAgICAvLyBJUOWItumZkOOBquOBl1xuICAgICAgICBpc1Nlc0VuYWJsZWQ6IGZhbHNlLFxuICAgICAgICBpc0RlbW86IHRydWUsXG4gICAgfSxcbiAgICAvLyDjg4bjg4rjg7Pjg4g077yI44OH44Oi44OG44OK44Oz44OI77yJXG4gICAge1xuICAgICAgICByb3V0ZTUzSG9zdGVkWm9uZUlkOiBcIlowMTE0MDIxMVVSS1QxSjYwV1RBNVwiLFxuICAgICAgICBhcHBEb21haW5OYW1lOiBcImRlbW8yLmRldi5zMy1lY3Mtd2ViLXNlcnZpY2UuaG9nZS1hcHAuY2xpY2tcIixcbiAgICAgICAgLy8gSVDliLbpmZDjgarjgZdcbiAgICAgICAgaXNTZXNFbmFibGVkOiBmYWxzZSxcbiAgICAgICAgaXNEZW1vOiB0cnVlLFxuICAgIH0sXG5dO1xuXG5jb25zdCBjb21tb25TdGFja1Byb3BzOiBDb21tb25TdGFja1Byb3BzID0ge1xuICAgIGNyb3NzUmVnaW9uUmVmZXJlbmNlczogdHJ1ZSxcbiAgICBlbnZOYW1lOiBcImRldlwiLFxuICAgIHRlbmFudHM6IHRlbmFudHMsXG4gICAgbG9nUmV0ZW50aW9uRGF5czogbG9ncy5SZXRlbnRpb25EYXlzLlRIUkVFX01PTlRIUyxcbn07XG5cbmNvbnN0IGdsb2JhbFN0YWNrUHJvcHM6IEdsb2JhbFN0YWNrUHJvcHMgPSB7XG4gICAgLi4uY29tbW9uU3RhY2tQcm9wcyxcbiAgICBlbnY6IHtcbiAgICAgICAgYWNjb3VudDogcHJvY2Vzcy5lbnYuQ0RLX0RFRkFVTFRfQUNDT1VOVCB8fCBkdW1teUFjY291bnRJZCxcbiAgICAgICAgcmVnaW9uOiBcInVzLWVhc3QtMVwiLFxuICAgIH0sXG59O1xuXG5jb25zdCBtYWluU3RhY2tQcm9wczogTWFpblN0YWNrUHJvcHMgPSB7XG4gICAgLi4uY29tbW9uU3RhY2tQcm9wcyxcbiAgICBlbnY6IHtcbiAgICAgICAgYWNjb3VudDogcHJvY2Vzcy5lbnYuQ0RLX0RFRkFVTFRfQUNDT1VOVCB8fCBkdW1teUFjY291bnRJZCxcbiAgICAgICAgcmVnaW9uOiBcImFwLW5vcnRoZWFzdC0xXCIsXG4gICAgfSxcbiAgICBuYXRHYXRld2F5c0NvdW50OiAxLFxuICAgIGRlZmF1bHRUdGw6IER1cmF0aW9uLmRheXMoMSksXG4gICAgbWF4VHRsOiBEdXJhdGlvbi5kYXlzKDM2NSksXG4gICAgbWluVHRsOiBEdXJhdGlvbi5zZWNvbmRzKDApLFxuICAgIGhlYWx0aENoZWNrUGF0aDogXCIvXCIsXG4gICAgYmFja2VuZEVjc1Rhc2tDcHU6IDEwMjQsXG4gICAgYmFja2VuZEVjc1Rhc2tNZW1vcnk6IDIwNDgsXG4gICAgYmFja2VuZE1heFRhc2tDb3VudDogMSxcbiAgICBiYWNrZW5kTWluVGFza0NvdW50OiAxLFxuICAgIGJhY2tlbmREZXNpcmVkQ291bnQ6IDEsXG4gICAgYmFja2VuZEVjc1NjYWxlT3V0UGVyaW9kOiBEdXJhdGlvbi5zZWNvbmRzKDMwMCksXG4gICAgYmFja2VuZEVjc1NjYWxlT3V0RXZhbHVhdGlvblBlcmlvZHM6IDMsXG4gICAgYmFja2VuZEVjc1NjYWxlSW5QZXJpb2Q6IER1cmF0aW9uLnNlY29uZHMoMzAwKSxcbiAgICBiYWNrZW5kRWNzU2NhbGVJbkV2YWx1YXRpb25QZXJpb2RzOiAzLFxuICAgIGFwcERlYnVnOiB0cnVlLFxuICAgIHBvc3RncmVzVmVyc2lvbjogcmRzLkF1cm9yYVBvc3RncmVzRW5naW5lVmVyc2lvbi5WRVJfMTZfMyxcbiAgICBwb3N0Z3Jlc0NsaWVudFZlcnNpb246IDE2LFxuICAgIGlzUmVhZFJlcGxpY2FFbmFibGVkOiBmYWxzZSxcbiAgICBhdXJvcmFTZXJ2ZXJsZXNzVjJNaW5DYXBhY2l0eTogMC41LFxuICAgIGF1cm9yYVNlcnZlcmxlc3NWMk1heENhcGFjaXR5OiA0LFxuICAgIGVjc1NjaGVkdWxlclN0YXRlOiBcIkVOQUJMRURcIixcbiAgICBhdXJvcmFTY2hlZHVsZXJTdGF0ZTogXCJFTkFCTEVEXCIsXG4gICAgZG1hcmNSZXBvcnRFbWFpbDogZGV2U2VjcmV0cy5kbWFyY1JlcG9ydEVtYWlsLFxuICAgIHNsYWNrV29ya3NwYWNlSWQ6IGRldlNlY3JldHMuc2xhY2sud29ya3NwYWNlSWQsXG4gICAgd2FybmluZ1NsYWNrQ2hhbm5lbElkOiBkZXZTZWNyZXRzLnNsYWNrLndhcm5pbmdDaGFubmVsSWQsXG4gICAgZ2l0aHViT3JnTmFtZTogXCJuZ3N3ODc3XCIsXG4gICAgZ2l0aHViUmVwb3NpdG9yeU5hbWU6IFwiYXdzLWluZnJhc3RydWN0dXJlXCIsXG4gICAgYWxiRGVsZXRpb25Qcm90ZWN0aW9uOiBmYWxzZSxcbiAgICBhdXJvcmFEZWxldGlvblByb3RlY3Rpb246IGZhbHNlLFxufTtcblxuZXhwb3J0IGNvbnN0IHBhcmFtczogUGFyYW1zID0ge1xuICAgIGdsb2JhbFN0YWNrUHJvcHM6IGdsb2JhbFN0YWNrUHJvcHMsXG4gICAgbWFpblN0YWNrUHJvcHM6IG1haW5TdGFja1Byb3BzLFxufTtcbiJdfQ==