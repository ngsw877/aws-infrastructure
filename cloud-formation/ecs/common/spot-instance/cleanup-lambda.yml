AWSTemplateFormatVersion: '2010-09-09'
Description: "Creates a Lambda function to delete the Auto Scaling group during the stack deletion of ECS on EC2."

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "LambdaEC2AutoScalingPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "autoscaling:DescribeAutoScalingGroups"
                  - "autoscaling:UpdateAutoScalingGroup"
                  - "autoscaling:DeleteAutoScalingGroup"
                  - "ec2:TerminateInstances"
                  - "ec2:DescribeInstances"
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"

  CleanupAutoScalingGroupFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: "index.handler"
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: "python3.8"
      Code:
        ZipFile: |
          import boto3
          import os
          import cfnresponse

          def handler(event, context):
              auto_scaling_client = boto3.client('autoscaling')
              ec2_client = boto3.client('ec2')

              # イベントオブジェクトからAuto Scalingグループ名を取得
              asg_name = event['ResourceProperties']['AsgName']

              try:
                  if event['RequestType'] == 'Delete':
                      # Auto Scalingグループの詳細を取得
                      response = auto_scaling_client.describe_auto_scaling_groups(
                          AutoScalingGroupNames=[asg_name]
                      )
                      instances = response['AutoScalingGroups'][0]['Instances']
                      instance_ids = [instance['InstanceId'] for instance in instances]

                      # 各インスタンスを終了
                      if instance_ids:
                          ec2_client.terminate_instances(InstanceIds=instance_ids)
                          print("Instances terminated:", instance_ids)

                      # Auto Scalingグループを削除
                      auto_scaling_client.delete_auto_scaling_group(
                          AutoScalingGroupName=asg_name,
                          ForceDelete=True
                      )
                      print("Auto Scaling group deleted:", asg_name)

                  cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
              except Exception as e:
                  print(e)
                  cfnresponse.send(event, context, cfnresponse.FAILED, {})
      Timeout: 120

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${CleanupAutoScalingGroupFunction}"
      RetentionInDays: 7

Outputs:
    CleanupAutoScalingGroupFunctionArn:
        Value: !GetAtt CleanupAutoScalingGroupFunction.Arn
        Export:
          Name: "CleanupAutoScalingGroupFunctionArn"
