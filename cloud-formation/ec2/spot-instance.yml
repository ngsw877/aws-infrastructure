AWSTemplateFormatVersion: '2010-09-09'
Description: Minimal isolated spot instance configuration with Auto Scaling Group

Parameters:
  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64

  SlackWorkspaceId:
    Type: String
    Description: "Slack Workspace ID for AWS Chatbot"

  SlackChannelId:
    Type: String
    Description: "Slack Channel ID for notifications"

  FisResourceTagValue:
    Type: String
    Default: "interrupt-me"
    Description: "Tag value for FIS experiment to target specific instances"

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true

  # プライベートサブネット
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region

  # セキュリティグループ
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security group for isolated spot instances"
      VpcId: !Ref VPC
      # Egressルールなし = 完全隔離

  # 起動テンプレート（MixedInstancesPolicyでスポット設定するため、ここではスポット設定しない）
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref LatestAmiId
        SecurityGroupIds:
          - !Ref SecurityGroup
        TagSpecifications:
          - ResourceType: "instance"
            Tags:
              - Key: "Test"
                Value: !Ref FisResourceTagValue
              - Key: "Name"
                Value: !Ref AWS::StackName
              - Key: "SpotInstance"
                Value: "true"

  # 複数インスタンスタイプ対応のAuto Scaling Group
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      MinSize: 1
      MaxSize: 2
      DesiredCapacity: 1
      HealthCheckType: EC2
      HealthCheckGracePeriod: 300
      CapacityRebalance: true
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-auto-scaling-group"
          PropagateAtLaunch: false
      MixedInstancesPolicy:
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
            # 同等の計算能力を持つインスタンスタイプ
            - InstanceType: t3.micro
              WeightedCapacity: 1
            - InstanceType: t3a.micro
              WeightedCapacity: 1
            - InstanceType: t4g.micro  # ARM版（AMIが対応している場合のみ）
              WeightedCapacity: 1
            - InstanceType: t2.micro
              WeightedCapacity: 1
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity: 0  # 100%スポット
          SpotAllocationStrategy: price-capacity-optimized  # ベストプラクティス

  # SNSトピック（EventBridgeからChatbotへの橋渡し）
  SpotInterruptionTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "Spot Instance Interruption Notifications"
      TopicName: spot-interruption-notifications

  # SNSトピックポリシー
  SpotInterruptionTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref SpotInterruptionTopic
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowEventBridgeToPublish
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action:
              - SNS:Publish
            Resource: !Ref SpotInterruptionTopic

  # EventBridge Rule（スポット中断通知）
  SpotInterruptionEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: spot-interruption-notification-rule
      Description: "EC2スポットインスタンスのリバランス推奨通知と中断警告をSNSに送信するルール"
      EventPattern:
        source:
          - aws.ec2
        detail-type:
          - EC2 Instance Rebalance Recommendation    # 中断リスク上昇の早期警告
          - EC2 Spot Instance Interruption Warning   # 終了2分前の最終警告（回避不可）
      State: ENABLED
      Targets:
        - Arn: !Ref SpotInterruptionTopic
          Id: SpotInterruptionSNSTarget


  # EventBridge Rule（実際のスポット中断検知）
  # BidEvictedEventはAWSリソース不足による自然なスポット中断時のみ発生
  # 要件：CloudTrailの有効化が必要
  BidEvictedEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: spot-bid-evicted-rule
      Description: "AWS側によるスポットインスタンス中断を検知"
      EventPattern:
        source:
          - aws.ec2
        detail-type:
          - AWS Service Event via CloudTrail
        detail:
          eventName:
            - BidEvictedEvent
      State: ENABLED
      Targets:
        - Arn: !Ref SpotInterruptionTopic
          Id: BidEvictedTarget

  # AWS Chatbot用IAMロール
  ChatbotRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: chatbot.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ChatbotPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudwatch:Describe*
                  - cloudwatch:Get*
                  - cloudwatch:List*
                Resource: '*'

  # AWS Chatbot Slack Channel設定
  SlackChannelConfiguration:
    Type: AWS::Chatbot::SlackChannelConfiguration
    Properties:
      ConfigurationName: spot-interruption-slack-channel
      SlackWorkspaceId: !Ref SlackWorkspaceId
      SlackChannelId: !Ref SlackChannelId
      IamRoleArn: !GetAtt ChatbotRole.Arn
      SnsTopicArns:
        - !Ref SpotInterruptionTopic
      LoggingLevel: INFO

  # スポットインスタンスの中断をテストするためのFIS実験テンプレート
  InterruptSpotInstanceFisExperimentTemplate:
    Type: AWS::FIS::ExperimentTemplate
    Properties:
      Description: "interrupt-spot-instance-test"
      Actions:
        interruptSpotInstance:
          ActionId: "aws:ec2:send-spot-instance-interruptions" # スポットインスタンスを中断するアクション 参考：https://docs.aws.amazon.com/fis/latest/userguide/fis-actions-reference.html#send-spot-instance-interruptions
          Targets:
            SpotInstances: "oneSpotInstance"
          Parameters:
            durationBeforeInterruption: "PT2M" # PT2M(Period Time 2 Minutes) = 2分...スポットインスタンスを中断する2分前に、中断の通知を送る
      Targets:
        oneSpotInstance:  # 中断対象の特定: スポットインスタンス AND タグ(Test=interrupt-me) AND 状態(running) でフィルタリング
          ResourceType: "aws:ec2:spot-instance"
          ResourceTags:  # タグで絞り込み（複数指定時はAND条件）
            Test: !Ref FisResourceTagValue
          Filters:  # 実行中のインスタンスのみを対象
            - Path: "State.Name"
              Values:
                - "running"
          SelectionMode: "COUNT(1)"  # 条件に該当するインスタンスが複数ある場合、ランダムに1個だけを選択
      ExperimentOptions:
        EmptyTargetResolutionMode: "fail"  # ターゲットが0個の場合は実験を失敗させる（skipの場合は続行）
        AccountTargeting: "single-account"  # 現在のアカウントのみで実験を実行（multi-accountで複数アカウント対応）
      StopConditions:
        - Source: "none"
      LogConfiguration: # FISのログ設定　参考：https://docs.aws.amazon.com/fis/latest/userguide/monitoring-logging.html
        CloudWatchLogsConfiguration:
          LogGroupArn: !GetAtt InterruptSpotInstanceFisLogGroup.Arn
        LogSchemaVersion: 2
      RoleArn: !GetAtt InterruptSpotInstanceFisRole.Arn
      Tags:
        Name: !Sub "${AWS::StackName}-interrupt-spot-instance-test"

  # FIS実行用のIAMロール
  InterruptSpotInstanceFisRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/service-role/"
      RoleName: !Sub "${AWS::StackName}-InterruptSpotInstanceFisRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "fis.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSFaultInjectionSimulatorEC2Access"
      Policies:
        - PolicyName: CustomCloudWatchLogsPolicyForFIS
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogDelivery"
                  - "logs:PutResourcePolicy"
                  - "logs:DescribeResourcePolicies"
                  - "logs:DescribeLogGroups"
                Resource: "*"
      MaxSessionDuration: 3600

  # FISログ用のCloudWatch Logsグループ
  InterruptSpotInstanceFisLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupClass: "STANDARD"
      RetentionInDays: 7
      LogGroupName: !Sub "${AWS::StackName}/interrupt-spot-instance-fis"
