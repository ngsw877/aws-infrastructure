AWSTemplateFormatVersion: '2010-09-09'
Description: Minimal isolated spot instance configuration with Auto Scaling Group

Parameters:
  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64

  SlackWorkspaceId:
    Type: String
    Description: "Slack Workspace ID for AWS Chatbot"

  SlackChannelId:
    Type: String
    Description: "Slack Channel ID for notifications"

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true

  # プライベートサブネット
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [1, !GetAZs '']

  # セキュリティグループ
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security group for isolated spot instances"
      VpcId: !Ref VPC
      # Egressルールなし = 完全隔離

  # 起動テンプレート（MixedInstancesPolicyでスポット設定するため、ここではスポット設定しない）
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref LatestAmiId
        SecurityGroupIds:
          - !Ref SecurityGroup

  # 複数インスタンスタイプ対応のAuto Scaling Group
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      MinSize: 1
      MaxSize: 2
      DesiredCapacity: 1
      HealthCheckType: EC2
      HealthCheckGracePeriod: 300
      CapacityRebalance: true
      Tags:
        - Key: SpotInstance
          Value: true
          PropagateAtLaunch: true
        - Key: Environment
          Value: spot-testing
          PropagateAtLaunch: true
      MixedInstancesPolicy:
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Overrides:
            # 同等の計算能力を持つインスタンスタイプ
            - InstanceType: t3.micro
              WeightedCapacity: 1
            - InstanceType: t3a.micro
              WeightedCapacity: 1
            - InstanceType: t4g.micro  # ARM版（AMIが対応している場合のみ）
              WeightedCapacity: 1
            - InstanceType: t2.micro
              WeightedCapacity: 1
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity: 0  # 100%スポット
          SpotAllocationStrategy: price-capacity-optimized  # ベストプラクティス

  # SNSトピック（EventBridgeからChatbotへの橋渡し）
  SpotInterruptionTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "Spot Instance Interruption Notifications"
      TopicName: spot-interruption-notifications

  # SNSトピックポリシー
  SpotInterruptionTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref SpotInterruptionTopic
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowEventBridgeToPublish
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action:
              - SNS:Publish
            Resource: !Ref SpotInterruptionTopic

  # EventBridge Rule（スポット中断通知）
  SpotInterruptionEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: spot-interruption-notification-rule
      Description: "Send spot instance interruption notices to SNS"
      EventPattern:
        source:
          - aws.ec2
        detail-type:
          - EC2 Spot Instance Interruption Warning
      State: ENABLED
      Targets:
        - Arn: !Ref SpotInterruptionTopic
          Id: SpotInterruptionSNSTarget

  # AWS Chatbot用IAMロール
  ChatbotRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: chatbot.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ChatbotPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudwatch:Describe*
                  - cloudwatch:Get*
                  - cloudwatch:List*
                Resource: '*'

  # AWS Chatbot Slack Channel設定
  SlackChannelConfiguration:
    Type: AWS::Chatbot::SlackChannelConfiguration
    Properties:
      ConfigurationName: spot-interruption-slack-channel
      SlackWorkspaceId: !Ref SlackWorkspaceId
      SlackChannelId: !Ref SlackChannelId
      IamRoleArn: !GetAtt ChatbotRole.Arn
      SnsTopicArns:
        - !Ref SpotInterruptionTopic
      LoggingLevel: INFO
