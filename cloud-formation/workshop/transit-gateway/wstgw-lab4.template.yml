AWSTemplateFormatVersion: 2010-09-09
Description: TGW hands-on lab4 template

## aws cloudformation deploy --template-file cloud-formation/workshop/transit-gateway/wstgw-lab4.template.yml --capabilities CAPABILITY_NAMED_IAM --no-execute-changeset --stack-name wstgw-lab4

Parameters:
  wstgwPrivateVpc3Cidr:
    Type: String
    Default: 10.2.0.0/16
  wstgwEc2Ami:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64
  wstgwEc2InstanceType:
    Type: String
    Default : t3.micro

Resources:
## Create IAM
  wstgwEc2IAMRole4:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement: 
          - Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"

  wstgwEc2InstanceProfile4:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
      - !Ref wstgwEc2IAMRole4

  ## Create PrivateVpc3
  #### Create VPC
  wstgwPrivateVpc3:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Sub ${wstgwPrivateVpc3Cidr}
      InstanceTenancy: default
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: wstgwPrivateVpc3

  #### create Subnet
  wstgwPrivateVpc3PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select [ 1, !Cidr [ !GetAtt wstgwPrivateVpc3.CidrBlock, 11, 8 ]]
      VpcId: !Ref wstgwPrivateVpc3
      AvailabilityZone: !Select [ 0, !GetAZs ]
      Tags:
        - Key: Name
          Value: wstgwPrivateVpc3PrivateSubnet

  wstgwPrivateVpc3TgwSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select [ 10, !Cidr [ !GetAtt wstgwPrivateVpc3.CidrBlock, 11, 8 ]]
      VpcId: !Ref wstgwPrivateVpc3
      AvailabilityZone: !Select [ 0, !GetAZs ]
      Tags:
        - Key: Name
          Value: wstgwPrivateVpc3TgwSubnet

  #### Route Table
  wstgwRtbPrivateVpc3PrivateSubnet:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref wstgwPrivateVpc3
      Tags:
        - Key: Name
          Value: wstgwRtbPrivateVpc3PrivateSubnet

  #### Create route
  ###### Create route & Associsate PrivateSubnet
  wstgwRoutePrivateVpc3PrivateSubnetToTgw:
    DependsOn: wstgwTgwVpcAttachmentPrivateVpc3
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref wstgwRtbPrivateVpc3PrivateSubnet
      DestinationCidrBlock: 0.0.0.0/0
      TransitGatewayId: !Ref wstgwTgw3

  wstgwRtbAssoPrivateVpc3PrivateSubnet:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref wstgwPrivateVpc3PrivateSubnet
      RouteTableId: !Ref wstgwRtbPrivateVpc3PrivateSubnet

  #### Create Endpoint
  wstgwSGSsmEndPoint3:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: wstgwSgSsmEndPoint3
      GroupDescription: "for SSM Endpoint"
      VpcId: !Ref wstgwPrivateVpc3
      SecurityGroupIngress:
        - Description: "Allow SSM Endpoint from Internal"
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Sub ${wstgwPrivateVpc3Cidr}
      Tags:
        - Key: Name
          Value: wstgwSGSsmEndPoint3

  wstgwSsmEndpoint3:
    DependsOn: wstgwEc2Instance10x2x1x100
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.ssm"
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      VpcId: !Ref wstgwPrivateVpc3
      SubnetIds:
        - !Ref wstgwPrivateVpc3PrivateSubnet
      SecurityGroupIds:
        - !Ref wstgwSGSsmEndPoint3

  wstgwSsmMessagesEndpoint3:
    DependsOn: wstgwEc2Instance10x2x1x100
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.ssmmessages"
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      VpcId: !Ref wstgwPrivateVpc3
      SubnetIds:
        - !Ref wstgwPrivateVpc3PrivateSubnet
      SecurityGroupIds:
        - !Ref wstgwSGSsmEndPoint3

  #### Create Instace
  wstgwSGEc2Instance3:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: wstgwSGEc2Instance3
      GroupDescription: "for EC2 instance"
      VpcId: !Ref wstgwPrivateVpc3
      SecurityGroupIngress:
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: "10.0.0.0/8"
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: "192.168.0.0/16"
      Tags:
        - Key: Name
          Value: wstgwSGEc2Instance3

  wstgwEc2Instance10x2x1x100: 
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: !Ref wstgwEc2Ami
#      KeyName: !Ref wstgwKeyName
      InstanceType: !Ref wstgwEc2InstanceType
      IamInstanceProfile: !Ref wstgwEc2InstanceProfile4
      NetworkInterfaces: 
        - DeviceIndex: "0"
          SubnetId: !Ref wstgwPrivateVpc3PrivateSubnet
          GroupSet:
            - !Ref wstgwSGEc2Instance3
          PrivateIpAddresses:
            - PrivateIpAddress: "10.2.1.100"
              Primary: true
      Tags:
          - Key: Name
            Value: wstgwEc2Instance10-2-1-100

  ## create TransitGW
  wstgwTgw3:
    Type: AWS::EC2::TransitGateway
    Properties:
      AmazonSideAsn: 65001
      AutoAcceptSharedAttachments: enable
      DefaultRouteTableAssociation: enable
      DefaultRouteTablePropagation: enable
      Description: !Join ['-', [wstgwTgw, !Ref 'AWS::Region']]
      DnsSupport: enable
      VpnEcmpSupport: enable
      MulticastSupport: disable
      Tags: 
        - Key: Name
          Value: !Join ['-', [wstgwTgw, !Ref 'AWS::Region']]

  #### Attachment VPC TransitGW
  wstgwTgwVpcAttachmentPrivateVpc3:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties:
      SubnetIds: 
        - !Ref wstgwPrivateVpc3TgwSubnet
      TransitGatewayId: !Ref wstgwTgw3
      VpcId: !Ref wstgwPrivateVpc3
      Tags:
        - Key: Name
          Value: wstgwTgwVpcAttachmentPrivateVpc3

Outputs:
  wstgwTgw3:
    Description: Tgw
    Value: !Ref wstgwTgw3
    Export:
      Name: !Join ['-', [wstgwTgw, !Ref 'AWS::Region']]

  wstgwPrivateVpc3:
    Description: PrivateVpc3
    Value: !Ref wstgwPrivateVpc3
    Export:
      Name: wstgwPrivateVpc3

  wstgwEc2Instance10x2x1x100:
    Description: wstgwEc2Instance10-2-1-100
    Value: !Ref wstgwEc2Instance10x2x1x100
    Export:
      Name: wstgwEc2Instance10-2-1-100

