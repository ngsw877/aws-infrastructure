AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  # プロジェクト名を入力する。各リソースのNameタグの値となる。
  EnvironmentName:
    Description: "An environment name that is prefixed to resource names"
    Type: String
    Default: sample-ecs

  AvailabilityZones:
    Type: CommaDelimitedList
    Default: "ap-northeast-1a, ap-northeast-1c, ap-northeast-1d"

  # VPCのCIDRレンジ
  VpcCIDR:
    Description: "Please enter the IP range (CIDR notation) for this VPC"
    Type: String
    Default: "10.99.0.0/16"

  # パブリックサブネットのCIDRレンジ
  PublicCidrBlocks:
    Type: CommaDelimitedList
    Default: "10.99.10.0/24, 10.99.11.0/24"

  # プライベートサブネットのCIDRレンジ
  PrivateCidrBlocks:
    Type: CommaDelimitedList
    Default: "10.99.20.0/24, 10.99.21.0/24, 10.99.22.0/24"

Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  # インターネットゲートウェイ
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  # インターネットゲートウェイをVPCにアタッチする
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc

  #======================
  # サブネット
  #======================
  PublicSubnetAz1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [ 0, !Ref AvailabilityZones ]
      CidrBlock: !Select [ 0, !Ref PublicCidrBlocks ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

  PublicSubnetAz2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [ 1, !Ref AvailabilityZones ]
      CidrBlock: !Select [ 1, !Ref PublicCidrBlocks ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

  PrivateSubnetAz1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [ 0, !Ref AvailabilityZones ]
      CidrBlock: !Select [ 0, !Ref PrivateCidrBlocks ]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

  PrivateSubnetAz2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [ 1, !Ref AvailabilityZones ]
      CidrBlock: !Select [ 1, !Ref PrivateCidrBlocks ]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ2)

  PrivateSubnetAz3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [ 2, !Ref AvailabilityZones ]
      CidrBlock: !Select [ 2, !Ref PrivateCidrBlocks ]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ3)

  #======================
  # ルートテーブル
  #======================
  # パブリックサブネット用共通ルートテーブル
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetAz1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetAz1

  PublicSubnetAz2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetAz2

Outputs:
  VpcId:
    Value: !Ref Vpc
    Export:
      Name: !Sub "${AWS::StackName}-VpcId"
  VpcCidrBlock:
    Value: !GetAtt Vpc.CidrBlock
    Export:
      Name: !Sub "${AWS::StackName}-VpcCidrBlock"
  PublicSubnetAz1:
    Value: !Ref PublicSubnetAz1
    Export:
      Name: !Sub "${AWS::StackName}-PublicSubnetAz1"
  PublicSubnetAz2:
    Value: !Ref PublicSubnetAz2
    Export:
      Name: !Sub "${AWS::StackName}-PublicSubnetAz2"
  PrivateSubnetAz1:
    Value: !Ref PrivateSubnetAz1
    Export:
      Name: !Sub "${AWS::StackName}-PrivateSubnetAz1"
  PrivateSubnetAz2:
    Value: !Ref PrivateSubnetAz2
    Export:
      Name: !Sub "${AWS::StackName}-PrivateSubnetAz2"
  PrivateSubnetAz3:
    Value: !Ref PrivateSubnetAz3
    Export:
      Name: !Sub "${AWS::StackName}-PrivateSubnetAz3"
